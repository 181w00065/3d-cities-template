/**
 * File:    ZoningRegulations3DCIM.cga
 * Created: 26 Feb 2013 10:27:47 GMT
 * Author:  Thorsten Reitz
 */

version "2013.1"

@Group("Rule Settings", 1)
@Range("APA", "3DCIM")
attr colorSet = "3DCIM"
@Group("Rule Settings")
attr unitConversionFactor = 0.3048

@Group("Parcel Values", 2)
attr aspect = ""
@Group("Parcel Values", 2)
attr value = ""
@Group("Parcel Values", 2)
attr usageType = ""
@Group("Parcel Values", 2)
attr ParcelFID = ""

@Hidden
attr maxHeight = 1

@Hidden
attr frontSetbackHeight = 0
@Hidden
attr frontSetbackAngle = 45
@Hidden
attr rearSetbackHeight = 0
@Hidden
attr rearSetbackAngle = 45

@Hidden
attr frontSetback = 0
@Hidden
attr sideSetback = 0
@Hidden
attr rearSetback = 0
@Hidden
attr allSetback = 0

@Hidden
attr lotArea = 0
@Hidden
attr parcelElevDiff = 0

getAspectValue(aspectOp) =
	listItem(value, listIndex(listClean(aspect), aspectOp))

checkNaN(nanAttribute) =
	case isnan(nanAttribute):
		0
	else:
		nanAttribute

getNormalizedAspect(aspectOp) =
	checkNaN(float(getAspectValue(aspectOp)) * unitConversionFactor)
	
getScaleFactor(usageTypeOp) =
	case usageTypeOp == "Open Space":
		1
	case usageTypeOp == "Protected Site":
		1
	else:
		0

getTotalHeight(usageTypeOp, parcelElevDiffOp) =
	case usageTypeOp == "Open Space":
		0.5
	case usageTypeOp == "Protected Site":
		0.5
	else:
		parcelElevDiffOp + getNormalizedAspect("TotalHeight")
		
getApaColor(usageOp) =
	case usageOp == "Open Space":
		"#90ee90"
	case usageOp == "Protected Site":
		"#ffffff"
	case usageOp == "Assembly":
		"#2f4f4f"
	case usageOp == "Agricultural":
		"#228b22"
	case usageOp == "Educational":
		"#0000ff"
	case usageOp == "Industry":
		"#a020f0"
	case usageOp == "Mercantile":
		"#ff0000"
	case usageOp == "Office":
		"#ff0000"
	case usageOp == "Public":
		"#0000ff"
	case usageOp == "Residential":
		"#ffff00"
	case usageOp == "Service":
		"#ff0000"
	case usageOp == "Storage":
		"#0000ff"
	case usageOp == "Transport":
		"#bebebe"
	case usageOp == "Utility":
		"#a020f0"
	else:
		"#ffffff"
		
get3dcimColor(usageOp) =
	case usageType == "Open Space":
		"#9fb82e"
	case usageType == "Protected Site":
		"#639000"
	case usageType == "Assembly":
		"#faa3e4"
	case usageType == "Agricultural":
		"#c9f600"
	case usageType == "Educational":
		"#3274c6"
	case usageType == "Industry":
		"#472b83"
	case usageType == "Mercantile":
		"#9a752d"
	case usageType == "Office":
		"#719284"
	case usageType == "Public":
		"#78C7E9"
	case usageType == "Residential":
		"#ffff00"
	case usageType == "Service":
		"#f1b746"
	case usageType == "Storage":
		"#8e6dd7"
	case usageType == "Transport":
		"#B884D5"
	case usageType == "Utility":
		"#888888"
	else:
		"#ffffff"

LotInner --> Lot

@StartRule
Lot -->
	cleanupGeometry(all, 0.5)
	alignScopeToAxes(y)
	set(parcelElevDiff, scope.sy)
	s('1,'getScaleFactor( usageType ),'1)
	LotAligned
	
LotAligned -->
	print("ParcelFID: " + ParcelFID)
	print("regulationAspect: " + aspect) 
	print("regulationValue: " + value) 
	set(lotArea, geometry.area)
	set(allSetback, getNormalizedAspect("Setback"))
	set(frontSetback, getNormalizedAspect("FrontSetback"))
	set(sideSetback, getNormalizedAspect("LeftSetback"))
	set(rearSetback, getNormalizedAspect("RearSetback"))
	set(frontSetbackHeight, getNormalizedAspect("FrontBaseHeight"))
	set(frontSetbackAngle, getNormalizedAspect("FrontSlope"))
	set(rearSetbackHeight, getNormalizedAspect("RearBaseHeight"))
	set(rearSetbackAngle, getNormalizedAspect("RearSlope"))
	set(maxHeight, getTotalHeight(usageType, parcelElevDiff))
	LotCheckFrontHeightSetback

LotCheckFrontHeightSetback -->
    case getAspectValue("FrontBaseHeight") == "" :
    	set(frontSetbackHeight, maxHeight - 10)
    	set(frontSetbackAngle, 45)
    	LotCheckRearHeightSetback
    else:
    	LotCheckRearHeightSetback
    	
LotCheckRearHeightSetback -->
	case getAspectValue("RearBaseHeight") == "" :
    	set(rearSetbackHeight, maxHeight - 10)
    	set(rearSetbackAngle, 45)
    	LotCheckSetbacks
    else:
    	LotCheckSetbacks

LotCheckSetbacks -->
	case allSetback > 0:
		set(frontSetback, allSetback)
		set(sideSetback, allSetback)
		set(rearSetback, allSetback)
		LotWithSetback
	case isnan(frontSetback) :
		set(frontSetback, 0)
	else :
		LotWithSetback
		
	
// Modify Setback in case of Row Houses
LotWithSetback -->
	case (usageType == "Residential" && scope.sx < 30): 
		set(frontSetback, 2)
		set(sideSetback, 0)
		set(rearSetback, rearSetback / 2)
		LotWithFinalSetback
	else :
		LotWithFinalSetback

LotWithFinalSetback -->
	setback( frontSetback ) { front: NIL | remainder: 
		setback( rearSetback ) { back: NIL | remainder: 
 			setback(sideSetback) { right: NIL | remainder:
 				setback(sideSetback) { left: NIL | remainder:
 					print("Final setback parameters - frontSetback: " + frontSetback + ", rearSetback: " + rearSetback + ", sideSetback: " + sideSetback)
					BuildableArea
				}
			}
		}
	}
 
  
BuildableArea -->
	case geometry.area > 60:
		report("Green Space area", lotArea - geometry.area)
 		report("GFA", geometry.area * maxHeight / 6)
 		print("Envelope parameters - maxHeight: " + maxHeight + ", frontSetbackHeight: " + frontSetbackHeight + ", frontSetbackAngle: " + frontSetbackAngle + ", rearSetbackHeight: " + rearSetbackHeight + ", rearSetbackAngle: " + rearSetbackAngle)
    	envelope(world.up, maxHeight, frontSetbackHeight, frontSetbackAngle, rearSetbackHeight, rearSetbackAngle) 
		BuildableVolume
	else :
		NIL
	
BuildableVolume -->
	case colorSet == "APA":
		color (getApaColor(usageType))
		ColoredBuildableVolume.
	else:
		color (get3dcimColor(usageType))
		ColoredBuildableVolume.
		
